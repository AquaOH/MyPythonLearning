# 单行注释，注意#号后必须跟着空格
'''
多行注释，使用单引号版 上为左引号，下为右引号
'''
"""
多行注释，使用双引号版 上为左引号，下为右引号
多行注释无法嵌套新的一个多行注释
"""

# 字符串引用

s1 = '这是单引号引用'
s2 = "这是双引号引用"

s3 = '这是使用转义字符避免\'提前截断匹配标点的字符串'
s4 = "也可以外双内单避免字符串内部出现引号'导致字符串提前截断,反之亦然"

# 字符串换行
# py对格式有严格要求，不能像C那样随意打换行

# 下面为反斜杠\换行字符串的演示

s5 = '这里是\
反斜杠\
换行的演示'

# 长字符串
# 长字符串由三个单引号或者双引号包围
s6 = """长字符串内容"""
s7 = '''长字符串内容'''

s8 = '''长字符串内随意放置单引号'和双引号"不会引起错误,但是注意别放两端'''
s9 = """长字符串可以赋值给变量"""
"""也可以直接当注释，python不会忽略长字符串，但只是当注释时起不到任何作用"""
s10 = """行1
长字符串的换行
    缩进(4格为标准)
以及空白字符            如左
均会原样输出
行6"""

# python原始字符串
# 使用原因：python在一般的字符串和长字符串内总是会解析转移符号\
s11 = r'原始字符串内容，我随便打\\\\\\\\\\'
s12 = r"任意输入\符号"

s13 = r'原始字符串内部出现单引号也会截断,即引号匹配,但是使用转义符\'消除冲突的话，这里是换行\
原始字符串并不会忽略转义符号，但是转义符号完成了转义'
s14 = r"包括转义符在结尾的话会导致结尾的转义符号转义结尾引号\""

print(s1)
print(s2)
print(s3)
print(s4)
print(s5)
print(s6)
print(s7)
print(s8)
print(s9)
print(s10)
print(s11)
print(s12)
print(s13)
print(s14)

# 顺带一提，python的print函数默认自动输出换行符号‘
# 即print(string,end='\n'), end='\n'默认省略
# 若想不换行，改为print(string, end=''）即可
# end=“”,中间的东西可以换成你喜欢的
print("默认end会换行")
print("自定义末尾不换行-----分隔一下----", end='')
print("自定义末尾为*号:", end='*')
# print函数输出多份内容遵从(内容一, 内容2, 内容3, ...)注意,后面有空格，严格缩进，这点和yaml类似
t1 = 114
t2 = 514
print('\n')  # 注意，转义符加上对应特称字符一起表示一个字符，需要用''包裹才能正常打印
print(t1, t2)
