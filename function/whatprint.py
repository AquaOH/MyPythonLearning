# print函数用法
"""
默认的print设定
print(value, ..., sep=' ', end='\n', file=sys.stdout, flush=False)
其中:
sep表示输出多个变量/值时的分隔符号，默认为空格
end表示输出时的结尾,默认为换行符\n
file表示输出值的去向,默认为sys.stdout,即屏幕,可以通过open函数打开文件让数据输出到特定文件

flush表示缓冲区是否进行强行输出数据并清空缓冲区，默认为False，即不强行输出数据
eg.默认False情况下在读写流中数据先被读到内存（相当于缓存区），再写入，中途用close()方法关闭读写流,缓存数据会丢失，开启True后，一有数据就会被立即写入
下面会进行示例

最后提示:等号左右别打空格，会变成赋值
"""

# 1.输出多份数据
a = 114
b = 514
c = 1919
d = 810
print(a, b, c, d)  # 分隔符默认空格,结尾默认换行符

print('---分割线---')

# 2.改变分隔符
print(a, b, c, d, sep='||')  # 将分隔符改成|

print('---分割线---')

# 3.改变输出结尾，默认为换行符\n
print(a, b, c, d, end='小尾巴~~~~')  # 将结尾的换行符变成：小尾巴~~~

print('---分割线---')
# 4.改变输出流去向
print(a, b, c, d, )
